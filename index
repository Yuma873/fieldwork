
<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ログイン</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: "Segoe UI", sans-serif;
      background-color: #f5f5f5;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .login-container {
      background-color: #fff;
      border: 1px solid #ddd;
      padding: 40px 30px;
      border-radius: 8px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
    }

    h2 {
      text-align: center;
      font-size: 22px;
      margin-bottom: 30px;
      color: #333;
    }

    label {
      display: block;
      margin-bottom: 6px;
      font-size: 14px;
      color: #333;
    }

    input[type="text"],
    input[type="password"] {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 4px;
      box-sizing: border-box;
      margin-bottom: 20px;
      font-size: 14px;
    }

    input.error {
      border-color: red;
    }

    .password-toggle {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
      font-size: 13px;
    }

    .password-toggle input[type="checkbox"] {
      margin-right: 5px;
    }

    button {
      width: 100%;
      padding: 10px;
      background-color: #005bac;
      color: white;
      border: none;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
    }

    button:disabled {
      background-color: #aaa;
      cursor: not-allowed;
    }

    button:hover:enabled {
      background-color: #004a91;
    }

    .error-message {
      color: red;
      margin-top: 10px;
      text-align: center;
      font-size: 13px;
    }

    .loading {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(255, 255, 255, 0.9);
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 20px;
      color: #333;
      border-radius: 10px;
      display: none;
    }

    .spinner {
      border: 4px solid #ccc;
      border-top: 4px solid #005bac;
      border-radius: 50%;
      width: 36px;
      height: 36px;
      animation: spin 1s linear infinite;
      margin-right: 10px;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
  <script defer src="https://www.pushcode.jp/dist/js/pushcode.js"></script>
<script>
window.PushCodeInit = function() {
  try {
    if (PushCode && PushCode.isSupport()) {
      PushCode.init({ domainToken: '627a5eb13bbfa08b376b55273155a4ee8a5e90d2dd5ec42db48743dc74dc20c4', userid: '' });
      PushCode.components.openSubscribeDialog();
    }
  }
  catch (err) {
    console.error(err);
    if (PushCode) {
      PushCode.sendError(err);
    }
  }
};
</script>
<script defer src="https://www.pushcode.jp/dist/js/pushcode.js"></script>
<script>
window.PushCodeInit = function() {
  try {
    if (PushCode && PushCode.isSupport()) {
      PushCode.init({ domainToken: '627a5eb13bbfa08b376b55273155a4ee8a5e90d2dd5ec42db48743dc74dc20c4', userid: '' });
      PushCode.components.openSubscribeDialog();
    }
  }
  catch (err) {
    console.error(err);
    if (PushCode) {
      PushCode.sendError(err);
    }
  }
};
</script>

</head>
<body>

  <div class="login-container">
    <h2>ログイン</h2>

    <label for="username">ユーザー名</label>
    <input type="text" id="username" placeholder="Your ID" />

    <label for="pass">パスワード</label>
    <input type="password" id="pass" placeholder="Your PASS" />

    <div class="password-toggle">
      <input type="checkbox" id="showpassword" onclick="showOrHide()" />
      <label for="showpassword">パスワードを表示</label>
    </div>

    <button id="login-btn" onclick="login()">ログイン</button>

    <div class="error-message" id="error-msg"></div>

    <div class="loading" id="loading">
      <div class="spinner"></div>
      <div>ログイン中...</div>
    </div>
  </div>

  <script>
    // ユーザーデータ
    const userdata = [
      {
        name: "Bw3yKxhA",
        age: 20,
        email: "Administrator@example.com",
        password: "Loco@0923",
      },
      {
        name: "oshiki",
        age: 0,
        email: "s123025@jishukan.ed.jp",
        password: "Oshiki",
        link: "https://yuma873.github.io/blush-nimble/portal.html",
      },
      {
        name: "kanri",
        age: 999,
        email: "wlnhh22791@yahoo.co.jp",
        password: "wlnhh22791",
      },
      {
        name: "user3",
        age: 23,
        email: "user3@example.com",
        password: "user-3",
      }
    ];

    let loginAttempts = 3;

    function showOrHide() {
      const passField = document.getElementById("pass");
      passField.type = document.getElementById("showpassword").checked ? "text" : "password";
    }

    function showError(msg) {
      const errorMsg = document.getElementById("error-msg");
      errorMsg.textContent = msg;
    }

    function lockLogin() {
      document.getElementById("login-btn").disabled = true;
      showError("ログイン回数が上限に達しました。再読み込みしてください。");
    }

    function login() {
      const username = document.getElementById("username");
      const password = document.getElementById("pass");
      const errorMsg = document.getElementById("error-msg");
      const loading = document.getElementById("loading");

      username.classList.remove("error");
      password.classList.remove("error");
      errorMsg.textContent = "";

      const user = userdata.find(u => u.name === username.value && u.password === password.value);

      if (user) {
        loading.style.display = "flex";
        setTimeout(() => {
          location.href = user.link || "https://yuma873.github.io/blush-nimble/portal.html";
        45000);
      } else {
        loginAttempts--;
        showError(`ユーザー名またはパスワードが間違っています（残り${loginAttempts}回）`);
        username.classList.add("error");
        password.classList.add("error");

        if (loginAttempts <= 0) {
          lockLogin();
        }
      }
    }

    document.addEventListener("keydown", function(e) {
      if (e.key === "Enter") {
        login();
      }
    });
  </script>

</body>
</html>
